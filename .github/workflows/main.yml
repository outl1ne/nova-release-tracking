on:
  [push]
  # schedule:
  #   # everyday at midnight
  #   - cron: "-1 0 * * *"
jobs:
  sync_laravel_nova_job:
    runs-on: ubuntu-latest
    name: "Syncs Laravel Nova Releases"
    steps:
      - uses: actions/checkout@v4

      - name: "Runs sync action"
        id: "releases"
        uses: "./.github/actions/sync-nova"
        with:
          target_nova_repo: ${{ vars.TARGET_NOVA_REPO }}
          personal_access_token: ${{ secrets.NOVA_REPO_ACCESS_TOKEN }}
          nova_user: ${{ secrets.NOVA_USER }}
          nova_password: ${{ secrets.NOVA_PASSWORD }}

      - uses: actions/checkout@v4
        with:
          repository: ${{ vars.TARGET_NOVA_REPO }}
          token: ${{ secrets.NOVA_REPO_ACCESS_TOKEN }}
      - name: "Create branch and commit changes"
        env:
          GH_TOKEN: ${{ secrets.NOVA_REPO_ACCESS_TOKEN }}
          NOVA_AUTH_ENCODED: ${{ steps.releases.outputs.nova_auth_encoded }}
        run: |
          # git checkout -b ${{ steps.releases.outputs.next_release_tag }}
          git rm -rf .
          git config --global user.email "kaspar.rosin@gmail.com"
          git config --global user.name "Kaspar Rosin"
          # git checkout -b "${{ steps.releases.outputs.next_release_tag }}"
          wget -d  \
            --output-document=nova.zip \
            --header="Authorization: Basic ${{ env.NOVA_AUTH_ENCODED }}" \
            ${{ steps.releases.outputs.nova_dist_url }}
          unzip nova.zip
          rm nova.zip
          git add .
          git commit -m "${{ steps.releases.outputs.next_release_tag }}"
          git push --force
          # git push --set-upstream origin ${{ steps.releases.outputs.next_release_tag }} --force
          # gh pr create \
          #   -b "Nova Release: ${{ steps.releases.outputs.next_release_tag }}" \
          #   -t "Release Tracking: ${{ steps.releases.outputs.next_release_tag }}" \
          # gh pr merge ${{ steps.releases.outputs.next_release_tag }}
          # git checkout -b "main"
          git tag -a ${{ steps.releases.outputs.next_release_tag }}
          git push --tags
          gh release create ${{ steps.releases.outputs.next_release_tag }}
